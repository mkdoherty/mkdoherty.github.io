ili_year <- data.frame(subset(ili_nat, select=c("year", "ilitotal")))
hospFlu <- data.frame(subset(hospFlu, select=c("sea_label", "year", "year_wk_num", "rate", "age_label", "wk_end")))
hospFlu_overall <- hospFlu[hospFlu$age_label=="Overall",]
hospFlu_overall_wk17 <- hospFlu_overall[hospFlu_overall$year_wk_num=="17",]
hospFlu_overall_wk10_2018 <- hospFlu_overall[hospFlu_overall$year_wk_num=="10" & hospFlu_overall$year=="2018",]
hospFlu_overall_current_utd <- hospFlu_overall[hospFlu_overall$year==max(hospFlu_overall$year),]
hospFlu_overall_current_utd <- hospFlu_overall_current_utd[hospFlu_overall_current_utd$year_wk_num==max(hospFlu_overall_current_utd$year_wk_num),]
hospFlu_overall_current_utd$sea_label <- "2017-18*"
hospFlu_cumrate <- rbind(hospFlu_overall_wk17, hospFlu_overall_current_utd)
hospFlu_cumrate_gg <- subset(hospFlu_cumrate, select=c("sea_label", "rate"))
caption <- paste("* Through", format(hospFlu_overall_current_utd$wk_end, format="%B %d, %Y"))
theme_update(plot.title = element_text(hjust = 0.5))
theme_update(plot.subtitle = element_text(hjust = 0.5))
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+
theme(plot.title = element_text(hjust = 0, vjust = 0.5))
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+
theme(plot.title = element_text(hjust = 0.5, vjust = 0.5))
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season",
caption=caption,
subtitle= "something")+
theme(plot.title = element_text(hjust = 0.5, vjust = 0.5))+
theme(plot.subtitle = element_text(hjust = 0.5, vjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season",
caption=caption)+
theme(plot.title = element_text(hjust = 0.5, vjust = 0.5))+
theme(plot.subtitle = element_text(hjust = 0.5, vjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+
theme(plot.title = element_text(hjust = 0.5, vjust = 0.5))+
theme(plot.subtitle = element_text(hjust = 0.5, vjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+
theme(plot.title = element_text(hjust = 0.5, vjust = 0.5))+
theme(plot.subtitle = element_text(hjust = 0.5, vjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+
theme(plot.title = element_text(hjust = 0.5, vjust = 0.5))
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+
theme(plot.title = element_text(hjust = 0.5, vjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
theme(plot.title = element_text(hjust = 0.5, vjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot+labs(y="Cumulative Incidence Rate per 100,000 Population", x="Flu Season",
title="Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")
hosp_flu_plot
hosp_flu_plot
hosp_flu_plot + theme(plot.title = element_text(hjust = 0.5))
hosp_flu_plot
hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")+
theme(plot.subtitle = element_text(hjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")
hosp_flu_plot + theme(plot.title = element_text(hjust = 0.5))
hosp_flu_plot
hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")
hosp_flu_plot + scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")
hosp_flu_plot + theme(plot.title = element_text(hjust = 0.5))
hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")
hosp_flu_plot + scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)
hosp_flu_plot + scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+ expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")
hosp_flu_plot
hosp_flu_plot
hosp_flu_plot
hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")
hosp_flu_plot <- hosp_flu_plot + scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+ expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")
hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")
hosp_flu_plot
hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")
hosp_flu_plot <- hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")
hosp_flu_plot
hosp_flu_plot + scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+ expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")
hosp_flu_plot + theme(plot.title = element_text(hjust = 0.5))
hosp_flu_plot <- hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")
hosp_flu_plot
hosp_flu_plot <- hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")+
expand_limits(y=c(0,100))
hosp_flu_plot
hosp_flu_plot <- hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")+
expand_limits(y=c(0,100))+scale_y_continuous(breaks = seq(0,100,10))+
theme_bw()
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")
hosp_flu_plot + theme(plot.title = element_text(hjust = 0.5))
hosp_flu_plot <- hosp_flu_plot + labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")+
expand_limits(y=c(0,100))+scale_y_continuous(breaks = seq(0,100,10))
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")
hosp_flu_plot + theme_bw(plot.title = element_text(hjust = 0.5))
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+	theme_bw()
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+	theme_bw()+
theme(plot.title = element_text(hjust = 0.5))+
labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")+
theme(plot.subtitle = element_text(hjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
pdf(file = "fluhospitalizationsbyseason.pdf", width = 8, height = 6)
hosp_flu_plot
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+	theme_bw()+
theme(plot.title = element_text(hjust = 0.5))+
labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")+
theme(plot.subtitle = element_text(hjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
pdf(file = "fluhospitalizationsbyseason.pdf", width = 8, height = 6)
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+	theme_bw()+
theme(plot.title = element_text(hjust = 0.5))+
labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")+
theme(plot.subtitle = element_text(hjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))+
pdf(file = "fluhospitalizationsbyseason.pdf", width = 8, height = 6)
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+	theme_bw()+
theme(plot.title = element_text(hjust = 0.5))+
labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")+
theme(plot.subtitle = element_text(hjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))
hosp_flu_plot
dev.off()
hosp_flu_plot
pdf(file = "fluhospitalizationsbyseason.pdf", width = 8, height = 6)
hosp_flu_plot
dev.off()
jpeg(file = "fluhospitalizationsbyseason.jpeg", width = 8, height = 6)
hosp_flu_plot
dev.off()
jpeg(file = "fluhospitalizationsbyseason.jpeg")
hosp_flu_plot
dev.off()
jpeg(file = "fluhospitalizationsbyseason.jpeg", width = 8, height = 6, units = "in")
hosp_flu_plot
jpeg(file = "fluhospitalizationsbyseason.jpeg", width = 8, height = 6, units = "in", res = 300)
hosp_flu_plot
dev.off()
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
#r setup, include=F, echo=FALSE, cache=FALSE}
deps = c("AUCRF","pROC", "vegan", "dplyr", 'knitr', "gridExtra", "grid", "xtable", "devtools", "pgirmess", "knitcitations", "scales", "tidyr", "ggplot2", "Hmisc", "cowplot", "mrgsolve", "magrittr", "cdcfluview");
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
pi_deaths <- cdcfluview::pi_mortality()
ili_nat <- cdcfluview::ilinet("national")
hospFlu <- cdcfluview::hospitalizations()
pi_deaths <- data.frame(subset(pi_deaths, select=c("wk_start","wk_end","year_wk_num","seasonid", "number_influenza", "number_pneumonia", "all_deaths", "total_pni")))
ili_nat <- data.frame(subset(ili_nat, select=c("week_start", "year", "week", "ilitotal")))
ili_year <- data.frame(subset(ili_nat, select=c("year", "ilitotal")))
hospFlu <- data.frame(subset(hospFlu, select=c("sea_label", "year", "year_wk_num", "rate", "age_label", "wk_end")))
hospFlu_overall <- hospFlu[hospFlu$age_label=="Overall",]
hospFlu_overall_wk17 <- hospFlu_overall[hospFlu_overall$year_wk_num=="17",]
hospFlu_overall_wk10_2018 <- hospFlu_overall[hospFlu_overall$year_wk_num=="10" & hospFlu_overall$year=="2018",]
hospFlu_overall_current_utd <- hospFlu_overall[hospFlu_overall$year==max(hospFlu_overall$year),]
hospFlu_overall_current_utd <- hospFlu_overall_current_utd[hospFlu_overall_current_utd$year_wk_num==max(hospFlu_overall_current_utd$year_wk_num),]
hospFlu_overall_current_utd$sea_label <- "2017-18*"
hospFlu_cumrate <- rbind(hospFlu_overall_wk17, hospFlu_overall_current_utd)
hospFlu_cumrate_gg <- subset(hospFlu_cumrate, select=c("sea_label", "rate"))
caption <- paste("* Through", format(hospFlu_overall_current_utd$wk_end, format="%B %d, %Y"))
theme_update(plot.title = element_text(hjust = 0.5))
theme_update(plot.subtitle = element_text(hjust = 0.5))
hosp_flu_plot <- ggplot(hospFlu_cumrate_gg, aes(sea_label, rate))+
geom_bar(stat = "identity", position = "dodge", fill = "red")+
ylab("Cumulative Incidence Rate per 100,000 Population")+ xlab("Flu Season")+
ggtitle("Figure 1: Laboratory-Confirmed Influenza-Related Hospitalizations by Season")+	theme_bw()+
theme(plot.title = element_text(hjust = 0.5))+
labs(caption=caption, subtitle="Reported by The Influenza Hospitalization Surveillence Network (FluSurv-NET).")+
theme(plot.subtitle = element_text(hjust = 0.5))+
scale_x_discrete(breaks = hospFlu_cumrate_gg$sea_label)+
expand_limits(y=c(0,100))+
scale_y_continuous(breaks = seq(0,100,10))
hosp_flu_plot
pi_deaths$year <- gsub("(\\d+)-(\\d+)-(\\d+)", "\\1", pi_deaths$wk_end)
pi_deaths$year_wk <- paste(pi_deaths$year,pi_deaths$year_wk_num, sep="_")
ili_nat$year_wk <- paste(ili_nat$year,ili_nat$week, sep="_")
ili_pi <- merge(pi_deaths, ili_nat, by="year_wk", all=T)
ili_pi <- subset(ili_pi, select=c("year.y", "year_wk", "seasonid", "number_influenza", "number_pneumonia", "total_pni", "ilitotal"))
get_season_yr <- function(seasonid){
season_yr <- ifelse(seasonid == "49", "09-10",
ifelse(seasonid == "50", "10-11",
ifelse(seasonid == "51", "11-12",
ifelse(seasonid == "52", "12-13",
ifelse(seasonid == "53", "13-14" ,
ifelse(seasonid == "54", "14-15",
ifelse(seasonid == "55", "15-16",
ifelse(seasonid == "56", "16-17", "17-18"))))))))
return(season_yr)
}
ili_pi$season_yrs <- as.factor(get_season_yr(ili_pi$seasonid))
str(ili_pi)
colnames(ili_pi) <- c("year.y", "year_wk", "seasonid","influenza_deaths", "pneumonia_deaths", "FluPneumonia_deaths", "Influenza-Like-Illness", "Season")
ili_pi_seasonyrs <- subset(ili_pi, select=c("year.y", "Season", "FluPneumonia_deaths", "Influenza-Like-Illness"))
str(ili_pi_seasonyrs)
colnames(ili_pi_seasonyrs)
ili_pi_byseason <- aggregate(ili_pi_seasonyrs[,-c(1:2)], by=list(Year = ili_pi_seasonyrs$year.y), FUN=sum)
ili_byseason_gg <- gather(ili_pi_byseason, type, cases, -c(Season))
str(ili_byseason_gg)
p <- ggplot(ili_byseason_gg, aes(Season, cases))+
geom_bar(stat = "identity", aes(fill=type), position = "dodge")+
ylab("Individuals")
ili_byseason_gg <- gather(ili_pi_byseason, type, cases, -c(Season))
ili_byseason_gg <- gather(ili_pi_byseason, type, cases, -c(Season))
ili_pi_seasonyrs <- subset(ili_pi, select=c("year.y", "Season", "FluPneumonia_deaths", "Influenza-Like-Illness"))
str(ili_pi_seasonyrs)
colnames(ili_pi_seasonyrs)
ili_pi_byseason <- aggregate(ili_pi_seasonyrs[,-c(1:2)], by=list(Year = ili_pi_seasonyrs$year.y), FUN=sum)
ili_byseason_gg <- gather(ili_pi_byseason, type, cases, -c(Season))
ili_byseason_gg
ili_pi_seasonyrs <- subset(ili_pi, select=c("year.y", "Season", "FluPneumonia_deaths", "Influenza-Like-Illness"))
str(ili_pi_seasonyrs)
ili_pi_seasonyrs
update.packages()
knitr::opts_chunk$set("echo" = FALSE)
knitr::opts_chunk$set("tidy" = TRUE)
knitr::opts_chunk$set("eval" = TRUE)
knitr::opts_chunk$set("warning" = FALSE)
knitr::opts_chunk$set("message" = FALSE)
knitr::opts_chunk$set("cache" = FALSE)
inline_hook <- function(x){
print(x)
if(is.list(x)){
x <- unlist(x)
}
if(is.numeric(x)){
if(abs(x - round(x)) < .Machine$double.eps^0.5){
paste(format(x,big.mark=',', digits=3, scientific=FALSE))
} else {
paste(format(x,big.mark=',', digits=3, nsmall=1, scientific=FALSE))
}
} else {
paste(x)
}
}
knitr::knit_hooks$set(inline=inline_hook)
#r setup, include=F, echo=FALSE, cache=FALSE}
deps = c("AUCRF","pROC", "vegan", "dplyr", 'knitr', "gridExtra", "grid", "xtable", "devtools", "pgirmess", "knitcitations", "scales", "tidyr", "ggplot2", "Hmisc", "cowplot", "rmarkdown");
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
#r setup, include=F, echo=FALSE, cache=FALSE}
deps = c("AUCRF","pROC", "vegan", "dplyr", 'knitr', "gridExtra", "grid", "xtable", "devtools", "pgirmess", "knitcitations", "scales", "tidyr", "ggplot2", "Hmisc", "cowplot", "mrgsolve", "magrittr", "cdcfluview", "purrr");
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
source('code/knitr_settings.R')
pi_deaths <- cdcfluview::pi_mortality()
#r setup, include=F, echo=FALSE, cache=FALSE}
deps = c("AUCRF","pROC", "vegan", "dplyr", 'knitr', "gridExtra", "grid", "xtable", "devtools", "pgirmess", "knitcitations", "scales", "tidyr", "ggplot2", "Hmisc", "cowplot", "mrgsolve", "magrittr", "cdcfluview", "purrr");
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
pi_deaths <- cdcfluview::pi_mortality()
#r setup, include=F, echo=FALSE, cache=FALSE}
deps = c("AUCRF","pROC", "vegan", "dplyr", 'knitr', "gridExtra", "grid", "xtable", "devtools", "pgirmess", "knitcitations", "scales", "tidyr", "ggplot2", "Hmisc", "cowplot", "mrgsolve", "magrittr", "cdcfluview", "purrr");
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
install.packages("cdcfluview")
install.packages("pgirmess")
#r setup, include=F, echo=FALSE, cache=FALSE}
deps = c("AUCRF","pROC", "vegan", "dplyr", 'knitr', "gridExtra", "grid", "xtable", "devtools", "pgirmess", "knitcitations", "scales", "tidyr", "ggplot2", "Hmisc", "cowplot", "mrgsolve", "magrittr", "cdcfluview", "purrr");
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
install.packages("expm")
install.packages(c("assertthat", "callr", "cli", "colorspace", "fs", "git2r", "glue", "gtable", "highr", "lazyeval", "Matrix", "mgcv", "openssl", "pkgbuild", "pROC", "purrr", "Rcpp", "rlang", "rmarkdown", "rstudioapi", "stringi", "tibble", "tinytex"))
install.packages(c("assertthat", "callr", "cli", "colorspace", "fs", "git2r", "glue", "gtable", "highr", "lazyeval", "Matrix", "mgcv", "openssl", "pkgbuild", "pROC", "purrr", "Rcpp", "rlang", "rmarkdown", "rstudioapi", "stringi", "tibble", "tinytex"))
install.packages(c("assertthat", "callr", "cli", "colorspace", "fs", "git2r", "glue", "gtable", "highr", "lazyeval", "Matrix", "mgcv", "openssl", "pkgbuild", "pROC", "purrr", "Rcpp", "rlang", "rmarkdown", "rstudioapi", "stringi", "tibble", "tinytex"))
install.packages(c("assertthat", "callr", "cli", "colorspace", "fs", "git2r", "glue", "gtable", "highr", "lazyeval", "Matrix", "mgcv", "openssl", "pkgbuild", "pROC", "purrr", "Rcpp", "rlang", "rmarkdown", "rstudioapi", "stringi", "tibble", "tinytex"))
install.packages(c("assertthat", "callr", "cli", "colorspace", "fs", "git2r", "glue", "gtable", "highr", "lazyeval", "Matrix", "mgcv", "openssl", "pkgbuild", "pROC", "purrr", "Rcpp", "rlang", "rmarkdown", "rstudioapi", "stringi", "tibble", "tinytex"))
install.packages(c("assertthat", "callr", "cli", "colorspace", "fs", "git2r", "glue", "gtable", "highr", "lazyeval", "Matrix", "mgcv", "openssl", "pkgbuild", "pROC", "purrr", "Rcpp", "rlang", "rmarkdown", "rstudioapi", "stringi", "tibble", "tinytex"))
install.packages(c("assertthat", "callr", "cli", "colorspace", "fs", "git2r", "glue", "gtable", "highr", "lazyeval", "Matrix", "mgcv", "openssl", "pkgbuild", "pROC", "purrr", "Rcpp", "rlang", "rmarkdown", "rstudioapi", "stringi", "tibble", "tinytex"))
#r setup, include=F, echo=FALSE, cache=FALSE}
deps = c("AUCRF","pROC", "vegan", "dplyr", 'knitr', "gridExtra", "grid", "xtable", "devtools", "pgirmess", "knitcitations", "scales", "tidyr", "ggplot2", "Hmisc", "cowplot", "mrgsolve", "magrittr", "cdcfluview", "purrr");
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
pi_deaths <- cdcfluview::pi_mortality()
pi_deaths$year <- as.integer(gsub("(\\d+)-(\\d+)-(\\d+)", "\\1", pi_deaths$wk_end))
pi_deaths$seasons <- ifelse(pi_deaths$year_wk_num<40, paste(pi_deaths$year-1,"-", gsub("(\\d)(\\d)(\\d)(\\d)", "\\3\\4", pi_deaths$year), sep=""), paste(pi_deaths$year,"-", gsub("(\\d)(\\d)(\\d)(\\d)", "\\3\\4", pi_deaths$year+1), sep=""))
pi_deaths$seasonid <- as.numeric(pi_deaths$seasonid)
i <- as.numeric(max(pi_deaths$seasonid))
j <- as.numeric(ifelse(max(pi_deaths$year_wk_num<40), paste((max(pi_deaths$year)-1)), paste(max(pi_deaths$year))))
k <- as.numeric(ifelse(max(pi_deaths$year_wk_num<40), gsub("(\\d)(\\d)(\\d)(\\d)", "\\3\\4", max(pi_deaths$year)), gsub("(\\d)(\\d)(\\d)(\\d)", "\\3\\4", (max(pi_deaths$year)+1))))
get_season_yr <- function(seasonid){
season_yr <- ifelse(seasonid == i, paste(j, "-", k, sep=""), paste((j-(i-seasonid)), "-", (k-(i-seasonid)), sep = ""))
return(season_yr)
}
pi_deaths$season <- get_season_yr(pi_deaths$seasonid)
#pi_deaths$year <- as.integer(gsub("(\\d+)-(\\d+)-(\\d+)", "\\1", pi_deaths$wk_start))
pi_deaths$season_wk <- as.factor(paste(pi_deaths$season,pi_deaths$year_wk_num, sep="_"))
#x <- c("2013-14_40", "2013-14_42")
#gsub("(\\d+)-(\\d+)_\\d+", "\\1", x), gsub("(\\d)(\\d)(\\d)(\\d)\\-(\\d+)_\\d+", "\\1\\2\\5", x))
pi_deaths$year <- ifelse(pi_deaths$year_wk_num>=40, gsub("(\\d+)-(\\d+)_\\d+", "\\1", pi_deaths$season_wk), gsub("(\\d)(\\d)(\\d)(\\d)\\-(\\d+)_\\d+", "\\1\\2\\5", pi_deaths$season_wk))
checks <- subset(pi_deaths, select=c("season","seasonid", "year", "year_wk_num","wk_start","wk_end"))
pi_deaths$year_wk <- paste(pi_deaths$year,pi_deaths$year_wk_num, sep="_")
pi_deaths_current_utd <- pi_deaths[pi_deaths$year==max(pi_deaths$year),]
pi_deaths_current_utd <- pi_deaths_current_utd[pi_deaths_current_utd$year_wk_num==max(pi_deaths_current_utd$year_wk_num),]
pi_deaths_current_utd$season <- "2017-18*"
pi_deaths <- data.frame(subset(pi_deaths, select=c("year_wk", "season","seasonid", "year", "year_wk_num","wk_start","wk_end", "number_influenza", "number_pneumonia", "all_deaths", "total_pni")))
ili_nat <- cdcfluview::ilinet("national")
ili_nat$season <- ifelse(ili_nat$week<40, paste(ili_nat$year-1,"-", gsub("(\\d)(\\d)(\\d)(\\d)", "\\3\\4", ili_nat$year), sep=""), paste(ili_nat$year,"-", gsub("(\\d)(\\d)(\\d)(\\d)", "\\3\\4", ili_nat$year+1), sep=""))
ili_nat$year_wk <- paste(ili_nat$year,ili_nat$week, sep="_")
ili_nat <- data.frame(subset(ili_nat, select=c("year_wk", "season", "week_start", "year", "week", "ilitotal", "total_patients")))
ili_nat_current_utd <- ili_nat[ili_nat$year==max(ili_nat$year),]
ili_nat_current_utd <- ili_nat_current_utd[ili_nat_current_utd$week==max(ili_nat_current_utd$week),]
ili_nat_current_utd$season <- "2017-18*"
ili_pi <- merge(pi_deaths, ili_nat, by="year_wk", all=T)
ili_pi$season <- ifelse(!is.na(ili_pi$season.x), ili_pi$season.x, ili_pi$season.y)
ili_pi_season <- subset(ili_pi, select=c("season", "week","year_wk", "week_start", "wk_start", "wk_end","ilitotal", "total_patients", "number_influenza", "number_pneumonia", "all_deaths", "total_pni"))
#ili_pi_season[is.na(ili_pi_season)] <- 0
ili_pi_since09 <- ili_pi_season[ili_pi_season$total_pni>0,]
ili_pi_2008 <- ili_pi_season[ili_pi_season$season=="2008-09",]
ili_pi_since2008 <- rbind(ili_pi_since09, ili_pi_2008)
ili_pi_since2008 <- arrange(ili_pi_since2008, season)
ili_pi_since2008$rateflud <- ili_pi_since2008$number_influenza/ili_pi_since2008$all_deaths*100
ili_pi_since2008$ratePId <- ili_pi_since2008$total_pni/ili_pi_since2008$all_deaths*100
ili_pi_since2008$rateILIbytot <- ili_pi_since2008$ilitotal/ili_pi_since2008$total_patients*100
ili_pi_gg <- subset(ili_pi_since2008, select=c("season", "week", "ratePId", "rateILIbytot"))
#ili_pi_since2008<-ili_pi_since2008[ili_pi_since2008$year_wk!='2016_52' & ili_pi_since2008$wk_end!="",]
ili_pi_gg %>% map_if(is.character, as.factor) %>% as_data_frame -> ili_pi_gg
ili_pi_gg$week <- as.factor(ili_pi_gg$week)
ili_pi_gg <- ili_pi_gg %>% drop_na(season)
#ili_pi_gg <- ili_pi_gg[ili_pi_gg$]
ili_pi_gg$week <- ordered(ili_pi_gg$week, levels=c(seq(40,53,1), seq(1,39,1)))
ilipi_byweek_gg <- gather(ili_pi_gg, type, rate, -c(season, week))
ilipi_byweek_gg %>% map_if(is.character, as.factor) %>% as_data_frame -> ilipi_byweek_gg
ilipi_byweek_gg$type <- relevel(ilipi_byweek_gg$type, "ratePId")
levels(ilipi_byweek_gg$type) <- c("P&I Deaths", "ILI Visits")
wrapper <- function(x, ...)
{
paste(strwrap(x, ...), collapse = "\n")
}
pflu <- ggplot(ilipi_byweek_gg, aes(x=week, y=rate, group=interaction(season, type), color=type, lty=type))+geom_line(size=1)+facet_grid(~season)+theme_bw()+scale_y_continuous(name="% of All Healthcare Visits for ILI*", sec.axis = sec_axis(~., name = "% of All Deaths Due to P&I^"))+scale_x_discrete(name="Week",breaks=c("40", "50", "10", "20", "30"))+theme(axis.title.y.right = element_text(colour = "darkred"), axis.title.y = element_text(colour = "darkblue"), panel.spacing=unit(0, "lines"), legend.position = c(0.1,0.9), legend.background = element_rect(linetype = "solid", colour = "black"), legend.title = element_blank(), panel.grid.major=element_line("grey"), panel.grid.minor=element_line("grey"), plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 1))+ scale_linetype_manual(values = c("twodash", "solid"))+scale_color_manual(values = c("darkred", "darkblue"))+labs(color="% of All", lty="% of All", caption = "* ILI Reported by the U.S. Outpatient Influenza-like Illness Surveillance Network (ILINet).\n^ P&I Deaths Reported by P&I Mortality Surveillance from the National Center for Health Statistics Mortality Surveillance System.")+ggtitle(wrapper("Percentage of All Visits to Healthcare Providers for Influenza-like Illness (ILI) in the United States by Season and Week Since 2008-09 (blue line, left axis) and the Percentage of All Deaths Due to Pneumonia and Influenza (P&I) Since 2009-2010 (red dashed line, right axis).", width=120 ))
pflu2 <- ggplot(ilipi_byweek_gg, aes(x=week, y=rate, group=interaction(season, type), color=type, lty=type))+geom_line(size=1)+facet_grid(~season)+theme_bw()+scale_y_continuous(name="% Total")+scale_x_discrete(name="Week",breaks=c("40", "50", "10", "20", "30"))+theme(axis.title.y.right = element_text(colour = "darkred"), panel.spacing=unit(0, "lines"), legend.position = c(0.1,0.9), legend.background = element_rect(linetype = "solid", colour = "black"), legend.title = element_blank(), panel.grid.major=element_line("grey"), panel.grid.minor=element_line("grey"), plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 1))+ scale_linetype_manual(values = c("twodash", "solid"))+scale_color_manual(values = c("darkred", "darkblue"))+labs(color="% of All", lty="% of All", caption = "* ILI Reported by the U.S. Outpatient Influenza-like Illness Surveillance Network (ILINet) since 2008-09 (blue line).\n^ P&I Deaths Reported by P&I Mortality Surveillance from the National Center for Health Statistics Mortality Surveillance System since 2009-10 (red dashed line).")+ggtitle("Percentage of All Visits to Healthcare Providers for Influenza-like Illness (ILI)* and \nPercentage of All Deaths Due to Pneumonia and Influenza (P&I)^ \nin the United States by Season and Week.")
#jpeg(file="ilipi_by_seasonANDweek.jpeg", width = 12, height = 9, units = "in", res=100)
pflu2
#dev.off()
install.packages("expm")
setwd("~/Sites/mkdoherty.github.io/code")
setwd("~/Sites/mkdoherty.github.io")
#dev.off()
#r setup, include=F, echo=FALSE, cache=FALSE}
deps = c("AUCRF","pROC", "vegan", "dplyr", 'knitr', "gridExtra", "grid", "xtable", "devtools", "pgirmess", "knitcitations", "scales", "tidyr", "ggplot2", "Hmisc", "cowplot", "mrgsolve", "magrittr", "cdcfluview", "purrr");
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
library("expm")
install.packages("expm")
